<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ipath.orderflowservice.order.dao.OrderPersonalPaymentMapper" >
  <resultMap id="BaseResultMap" type="com.ipath.orderflowservice.order.dao.bean.OrderPersonalPayment" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="company_id" property="companyId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="order_source_id" property="orderSourceId" jdbcType="BIGINT" />
    <result column="total_amount" property="totalAmount" jdbcType="NUMERIC" />
    <result column="pay_status" property="payStatus" jdbcType="SMALLINT" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="transaction_no" property="transactionNo" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, company_id, user_id, order_id, order_source_id, total_amount, pay_status, pay_time, 
    transaction_no, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from public.order_personal_payment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from public.order_personal_payment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ipath.orderflowservice.order.dao.bean.OrderPersonalPayment" >
    insert into public.order_personal_payment (id, company_id, user_id, 
      order_id, order_source_id, total_amount, 
      pay_status, pay_time, transaction_no, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{orderId,jdbcType=BIGINT}, #{orderSourceId,jdbcType=BIGINT}, #{totalAmount,jdbcType=NUMERIC}, 
      #{payStatus,jdbcType=SMALLINT}, #{payTime,jdbcType=TIMESTAMP}, #{transactionNo,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ipath.orderflowservice.order.dao.bean.OrderPersonalPayment" >
    insert into public.order_personal_payment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderSourceId != null" >
        order_source_id,
      </if>
      <if test="totalAmount != null" >
        total_amount,
      </if>
      <if test="payStatus != null" >
        pay_status,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="transactionNo != null" >
        transaction_no,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderSourceId != null" >
        #{orderSourceId,jdbcType=BIGINT},
      </if>
      <if test="totalAmount != null" >
        #{totalAmount,jdbcType=NUMERIC},
      </if>
      <if test="payStatus != null" >
        #{payStatus,jdbcType=SMALLINT},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transactionNo != null" >
        #{transactionNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ipath.orderflowservice.order.dao.bean.OrderPersonalPayment" >
    update public.order_personal_payment
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderSourceId != null" >
        order_source_id = #{orderSourceId,jdbcType=BIGINT},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=NUMERIC},
      </if>
      <if test="payStatus != null" >
        pay_status = #{payStatus,jdbcType=SMALLINT},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transactionNo != null" >
        transaction_no = #{transactionNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ipath.orderflowservice.order.dao.bean.OrderPersonalPayment" >
    update public.order_personal_payment
    set company_id = #{companyId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      order_id = #{orderId,jdbcType=BIGINT},
      order_source_id = #{orderSourceId,jdbcType=BIGINT},
      total_amount = #{totalAmount,jdbcType=NUMERIC},
      pay_status = #{payStatus,jdbcType=SMALLINT},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      transaction_no = #{transactionNo,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--以下手工添加-->
  <select id="selectByOrderId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from public.order_personal_payment
    where order_id = #{orderId,jdbcType=BIGINT}
    order by id desc
    limit 1
  </select>

  <select id="selectByOrderIds" parameterType="java.util.List" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from  public.order_personal_payment opp
    where opp.order_id in
    <foreach collection="orderIdList" item="orderId" open="(" separator="," close=")">
      #{userId}
    </foreach>
  </select>
</mapper>