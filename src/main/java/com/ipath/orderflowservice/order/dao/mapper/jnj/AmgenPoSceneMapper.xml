<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ipath.orderflowservice.order.dao.AmgenPoSceneMapper" >
  <resultMap id="BaseResultMap" type="com.ipath.orderflowservice.order.dao.bean.AmgenPoScene" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="company_id" property="companyId" jdbcType="BIGINT" />
    <result column="po_id" property="poId" jdbcType="BIGINT" />
    <result column="cost_center_code" property="costCenterCode" jdbcType="VARCHAR" />
    <result column="scene_id" property="sceneId" jdbcType="BIGINT" />
    <result column="is_delete" property="isDelete" jdbcType="BIT" />
    <result column="delete_user_id" property="deleteUserId" jdbcType="BIGINT" />
    <result column="delete_time" property="deleteTime" jdbcType="TIMESTAMP" />
    <result column="createor" property="createor" jdbcType="BIGINT" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updater" property="updater" jdbcType="BIGINT" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, company_id, po_id, cost_center_code, scene_id, is_delete, delete_user_id, delete_time, 
    createor, created_time, updater, updated_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from amgen_po_scene
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from amgen_po_scene
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ipath.orderflowservice.order.dao.bean.AmgenPoScene" >
    insert into amgen_po_scene (id, company_id, po_id,
      cost_center_code, scene_id, is_delete, 
      delete_user_id, delete_time, createor, 
      created_time, updater, updated_time
      )
    values (#{id,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, #{poId,jdbcType=BIGINT}, 
      #{costCenterCode,jdbcType=VARCHAR}, #{sceneId,jdbcType=BIGINT}, #{isDelete,jdbcType=BIT}, 
      #{deleteUserId,jdbcType=BIGINT}, #{deleteTime,jdbcType=TIMESTAMP}, #{createor,jdbcType=BIGINT}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=BIGINT}, #{updatedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ipath.orderflowservice.order.dao.bean.AmgenPoScene" >
    insert into amgen_po_scene
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="poId != null" >
        po_id,
      </if>
      <if test="costCenterCode != null" >
        cost_center_code,
      </if>
      <if test="sceneId != null" >
        scene_id,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="deleteUserId != null" >
        delete_user_id,
      </if>
      <if test="deleteTime != null" >
        delete_time,
      </if>
      <if test="createor != null" >
        createor,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="poId != null" >
        #{poId,jdbcType=BIGINT},
      </if>
      <if test="costCenterCode != null" >
        #{costCenterCode,jdbcType=VARCHAR},
      </if>
      <if test="sceneId != null" >
        #{sceneId,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="deleteUserId != null" >
        #{deleteUserId,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null" >
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createor != null" >
        #{createor,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ipath.orderflowservice.order.dao.bean.AmgenPoScene" >
    update amgen_po_scene
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="poId != null" >
        po_id = #{poId,jdbcType=BIGINT},
      </if>
      <if test="costCenterCode != null" >
        cost_center_code = #{costCenterCode,jdbcType=VARCHAR},
      </if>
      <if test="sceneId != null" >
        scene_id = #{sceneId,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="deleteUserId != null" >
        delete_user_id = #{deleteUserId,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null" >
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createor != null" >
        createor = #{createor,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ipath.orderflowservice.order.dao.bean.AmgenPoScene" >
    update amgen_po_scene
    set company_id = #{companyId,jdbcType=BIGINT},
      po_id = #{poId,jdbcType=BIGINT},
      cost_center_code = #{costCenterCode,jdbcType=VARCHAR},
      scene_id = #{sceneId,jdbcType=BIGINT},
      is_delete = #{isDelete,jdbcType=BIT},
      delete_user_id = #{deleteUserId,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      createor = #{createor,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=BIGINT},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectPoAndCostCenterBySceneId" resultType="java.lang.String" parameterType="java.lang.Long" >
    select
      top 1
        concat(ap.po_code,'|',c.costcenter_name) as value
    from amgen_po_scene aps
           join amgen_po ap on aps.po_id =ap.id
           join costcenter c on aps.cost_center_code =c.costcenter_code
    where aps.is_delete=0
    <if test="sceneId != null" >
      and aps.scene_id = #{sceneId,jdbcType=BIGINT}
    </if>
    ;
  </select>
</mapper>